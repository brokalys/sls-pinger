service: brokalys-pinger

provider:
  name: aws
  region: eu-west-1
  runtime: nodejs12.x
  timeout: 3
  cfLogs: true
  versionFunctions: false
  tracing: true
  environment:
      DB_HOST: ${file(serverless.env.yml):DB_HOST, env:DB_HOST}
      DB_DATABASE: ${file(serverless.env.yml):DB_DATABASE, env:DB_DATABASE}
      DB_USERNAME: ${file(serverless.env.yml):DB_USERNAME, env:DB_USERNAME}
      DB_PASSWORD: ${file(serverless.env.yml):DB_PASSWORD, env:DB_PASSWORD}
      DB_PROPERTIES_DATABASE: ${file(serverless.env.yml):DB_PROPERTIES_DATABASE, env:DB_PROPERTIES_DATABASE}
      MAILGUN_API_KEY: ${file(serverless.env.yml):MAILGUN_API_KEY, env:MAILGUN_API_KEY}
      MAILGUN_DOMAIN: ${file(serverless.env.yml):MAILGUN_DOMAIN, env:MAILGUN_DOMAIN}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - SNS:Publish
      Resource: "arn:aws:sns:eu-west-1:*:*"
    - Effect: "Allow" # xray permissions (required)
      Action:
        - "xray:PutTraceSegments"
        - "xray:PutTelemetryRecords"
      Resource:
        - "*"

functions:
  init:
    handler: src/init.run
    events:
      - schedule: rate(5 minutes)
  pinger:
    handler: src/pinger.run
    events:
      - sns: pinger
    alarms:
      functionErrors:
        treatMissingData: notBreaching
      functionInvocations:
        statistic: Average
        period: 86400 # 1 day
        treatMissingData: breaching

custom:
  alerts:
    topics:
      ok:
        topic: ${self:service}-alerts-ok
        notifications:
          - protocol: email
            endpoint: matiss@brokalys.com
    topics:
      alarm:
        topic: ${self:service}-alerts-alarm
        notifications:
          - protocol: email
            endpoint: matiss@brokalys.com
    alarms:
      - functionErrors
      - functionInvocations

plugins:
  - serverless-plugin-aws-alerts
  - serverless-plugin-tracing
